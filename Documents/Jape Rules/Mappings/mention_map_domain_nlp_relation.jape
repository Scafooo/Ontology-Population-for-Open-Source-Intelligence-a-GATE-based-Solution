/*
OwlExporter --  http://www.semanticsoftware.info/owlexporter

This file is part of the OwlExporter architecture.

Copyright (C) 2009, 2010 Semantic Software Lab, http://www.semanticsoftware.info
        Ren√© Witte
        Ninus Khamis

The OwlExporter  architecture is free software: you can
redistribute and/or modify it under the terms of the GNU Affero General
Public License as published by the Free Software Foundation, either
version 3 of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Phase: mention_map_domain_nlp_relation
Input: OwlExportClassNLP
Options: control = all

Rule: Domain_appearsIn_Sentence
(
{OwlExportClassNLP.className=="Sentence"}
)
:ann
-->
{	
	gate.AnnotationSet sentAS = (gate.AnnotationSet)bindings.get("ann");
	gate.Annotation sentAnn = (gate.Annotation)sentAS.iterator().next();
	AnnotationSet domAS = inputAS.getContained(sentAS.firstNode().getOffset(), sentAS.lastNode().getOffset()).get("OwlExportClassDomain");
	if(domAS.firstNode()!=null){
	gate.Annotation domAnn = (gate.Annotation)domAS.iterator().next();
    
	String propertyName="appearsIn";

	for(Annotation a : domAS) {
		gate.FeatureMap features = Factory.newFeatureMap();
		features.put("propertyName",propertyName);
		features.put("domainId", a.getFeatures().get("representationId"));
		features.put("rangeId",sentAnn.getFeatures().get("representationId"));
		features.put("kind", "JAPE");

		outputAS.add(sentAS.firstNode(), sentAS.lastNode(),"OwlExportRelationDomainNLP",features);
	}	}		
}
