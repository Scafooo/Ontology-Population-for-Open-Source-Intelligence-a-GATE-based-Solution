/*
OwlExporter --  http://www.semanticsoftware.info/owlexporter

This file is part of the OwlExporter architecture.

Copyright (C) 2009, 2010 Semantic Software Lab, http://www.semanticsoftware.info
        Ren√© Witte
        Ninus Khamis

The OwlExporter  architecture is free software: you can
redistribute and/or modify it under the terms of the GNU Affero General
Public License as published by the Free Software Foundation, either
version 3 of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Phase: mention_map_nlp_entities
Input: Document Sentence NP
Options: control = all

Rule: mention_map_nlp_entities
(
	{Document} |
	{Sentence} |
	{NP}	
):ann	
-->
{	
	try {		
		AnnotationSet as = (gate.AnnotationSet)bindings.get("ann");
		Annotation ann = (gate.Annotation)as.iterator().next();
		
		FeatureMap features = Factory.newFeatureMap();

		features.put("className", ann.getType().toString());
		features.put("representationId", ann.getId());
		features.put("corefChain", null);
		features.put("kind", "Class");		
		
		String in = doc.getContent().getContent(
				ann.getStartNode().getOffset(), ann.getEndNode().getOffset()).toString();
		
		if(ann.getType().toString().compareToIgnoreCase("Document")!=0)
		  features.put("instanceName", in);
		
		if(ann.getType().toString().compareToIgnoreCase("Document")==0) {
			features.put("instanceName",ann.getFeatures().get("title"));
		}		
		else if (ann.getType().toString().compareToIgnoreCase("Sentence") == 0){						
			features.put("content", in);
			features.put("beginLocation", ann.getStartNode().getOffset());
			features.put("endLocation", ann.getEndNode().getOffset());			
		}	

		outputAS.add(as.firstNode(), as.lastNode(),"OwlExportClassNLP",features);
	}
	catch(Exception e)
	{		
		e.printStackTrace();
	}
}